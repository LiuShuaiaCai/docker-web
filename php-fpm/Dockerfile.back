FROM php:fpm
# MAINTAINER liushuaicai<liushuaicai@100tal.com>

ENV TZ "Asia/Shanghai"

RUN docker-php-ext-install pdo_mysql
RUN docker-php-ext-install mysqli && docker-php-ext-enable mysqli
RUN docker-php-ext-install pdo_mysql
# RUN apt-get update && apt-get install -y \
#         libfreetype6-dev \
#         libjpeg62-turbo-dev \
#         libmcrypt-dev \
#         libpng-dev \
#     && docker-php-ext-install -j$(nproc) iconv mcrypt \
#     && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
#     && docker-php-ext-install -j$(nproc) gd

# RUN docker-php-ext-install xdebug && docker-php-ext-enable xdebug
# RUN pecl install xdebug && docker-php-ext-enable xdebug
RUN apt-get update && apt-get install gzip 
# RUN apt-get install zlib1g-dev
RUN mkdir -p /usr/src/php/ext/redis \
    && curl -L http://pecl.php.net/get/redis-4.1.1.tgz | tar xvz -C /usr/src/php/ext/redis --strip 1 \
    && echo 'redis' >> /usr/src/php-available-exts \
    && docker-php-ext-install redis

# RUN mkdir -p /usr/src/php/ext/rabbitmq \
#     && curl -L https://github.com/alanxz/rabbitmq-c/archive/v0.8.0.tar.gz | tar -zxv -C /usr/src/php/ext/rabbitmq --strip 1 \
#     && ( \
#         cd /usr/src/php/ext/rabbitmq \
#         && autoconf -i \
#         && phpize \
#         && ./configure \
#         && make \
#         && make install \
#     )
# RUN apt-get install unzip
# RUN mkdir -p /usr/src/php/ext/rabbitmq \
#     && cd /usr/src/php/ext/rabbitmq \
#     && curl -L https://github.com/alanxz/rabbitmq-c/archive/v0.9.0.tar.gz | tar -zxv --strip 1 \
#     && cd rabbitmq-c-0.9.0 \
#     && ./configure \
#     && make \
#     && make install \

RUN apt-get install wget
RUN mkdir -p /usr/local/autoconf \
    && cd /usr/local/autoconf \
    && wget ftp://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz \
    && tar zxvf autoconf-2.69.tar.gz \
    && cd autoconf-2.69 \
    && ./configure \
    && make \
    && make install

RUN mkdir -p /usr/src/php/ext/rabbitmq \
    && cd /usr/src/php/ext/rabbitmq \
    && wget https://github.com/alanxz/rabbitmq-c/releases/download/v0.5.2/rabbitmq-c-0.5.2.tar.gz  \
    && tar zxvf rabbitmq-c-0.5.2.tar.gz \
    && cd rabbitmq-c-0.5.2 \
    && /usr/local/bin/autoconf -i \
    && ./configure \
    && make && make install

RUN mkdir -p /usr/src/php/ext/amqp \
    && curl -L http://pecl.php.net/get/amqp-1.7.0.tgz | tar xvz -C /usr/src/php/ext/amqp --strip 1 \
    && echo 'amqp' >> /usr/src/php-available-exts \
    && docker-php-ext-install amqp


# Version 
ENV PHPREDIS_VERSION 4.1.1 
ENV HIREDIS_VERSION 0.13.3 
ENV SWOOLE_VERSION 4.3.2
# Libs 
RUN apt-get update && \
    apt-get install -y \
        curl \
        wget \
        git \
        zip \
        libz-dev \
        libssl-dev \
        libnghttp2-dev \
        libpcre3-dev \
        openssl 
    # && apt-get clean \
    # && apt-get autoremove 

RUN curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/local/bin/composer \
    && composer self-update --clean-backups

# Redis extension 
RUN wget http://pecl.php.net/get/redis-${PHPREDIS_VERSION}.tgz -O /tmp/redis.tar.tgz \
    && pecl install /tmp/redis.tar.tgz \
    && rm -rf /tmp/redis.tar.tgz \
    && docker-php-ext-enable redis 
# Hiredis 
RUN wget https://github.com/redis/hiredis/archive/v${HIREDIS_VERSION}.tar.gz -O hiredis.tar.gz \
    && mkdir -p hiredis \
    && tar -xf hiredis.tar.gz -C hiredis --strip-components=1 \
    && rm hiredis.tar.gz \
    && ( \
        cd hiredis \
        && make -j$(nproc) \
        && make install \
        && ldconfig \
    ) \
    && rm -r hiredis
# Swoole extension
RUN wget https://github.com/swoole/swoole-src/archive/v${SWOOLE_VERSION}.tar.gz -O swoole.tar.gz \
    && mkdir -p swoole \
    && tar -xf swoole.tar.gz -C swoole --strip-components=1 \
    && rm swoole.tar.gz \
    && ( \
        cd swoole \
        && phpize \
        && ./configure --enable-async-redis --enable-mysqlnd --enable-openssl --enable-http2 \
        && make -j$(nproc) \
        && make install \
    ) \
    && rm -r swoole \
    && docker-php-ext-enable swoole


RUN cp /usr/src/php/php.ini-production /usr/src/php/php.ini


